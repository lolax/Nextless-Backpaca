

type Query {
  user(id: ID!): User!
  users: [User!]!
  hello: String!
  countryById(id: ID!): Country!
  countryByName(name: String!): Country!
  countries: [Country!]!
  visits: [Visit!]!
  visit(id: ID!): Visit!
  friends(id: ID): [User!]!
}

type Mutation {
  createUser(twitterHandle: String, name: String, nickname: String, email: String): User!
  updateUser(name: String, nickname: String, email: String, scratchingAutomated: Boolean, isPrivate: Boolean, id: ID!, bio: String, pictureUrl: String): User!
  deleteUser(id: ID!): User!
  createCountry(name: String!, code: String!): Country!
  createVisit(userId: ID!, countryId: ID!, level: Int, note: String): Visit!
  updateVisit(id: ID!, level: Int, note: String): Visit!
  deleteVisit(id: ID!): Visit!
  addFriend(userId: ID!, friendId: ID!): User!
  deleteFriend(userId: ID!, friendId: ID!): User!
}

type User {
  id: ID!
  name: String
  nickname: String
  email: String
  visits: [Visit]
  twitterHandle: String
  scratchingAutomated: Boolean
  isPrivate: Boolean
  friends: [User]
  bio: String
  pictureUrl: String
}

type Country {
  id: ID!
  name: String!
  code: String!
  visits: [Visit]
}

type Visit {
  id: ID!
  user: User!
  country: Country!
  note: String
  level: Int
}
